// <auto-generated />
using System;
using MaterialManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaterialManagement.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250122111510_UpdateColumnConstraints")]
    partial class UpdateColumnConstraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.Fiyat", b =>
                {
                    b.Property<int>("FiyatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FiyatId"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BitisTarihi")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MalzemeFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FiyatId");

                    b.ToTable("Fiyatlar");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.Malzeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FiyatId")
                        .HasColumnType("int");

                    b.Property<string>("Fotograf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MalzemeAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MalzemeGrupId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StokMiktari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UrunTipiTablosuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiyatId");

                    b.HasIndex("MalzemeGrupId");

                    b.HasIndex("UrunTipiTablosuId");

                    b.ToTable("Malzemeler");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.MalzemeGrup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrupAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MalzemeGruplari");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.ReceteBaslik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceteAciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceteAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VersiyonNo")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReceteBasliklar");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.ReceteKalem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MalzemeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReceteBaslikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeId");

                    b.HasIndex("ReceteBaslikId");

                    b.ToTable("ReceteKalemler");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.Stok", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IslemTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MalzemeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeId");

                    b.ToTable("Stoklar");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.UrunTipiTablosu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UrunTipiTablolari");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.Malzeme", b =>
                {
                    b.HasOne("MaterialManagement.Entity.Concrete.Fiyat", "Fiyat")
                        .WithMany("Malzemes")
                        .HasForeignKey("FiyatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaterialManagement.Entity.Concrete.MalzemeGrup", "MalzemeGrup")
                        .WithMany("Malzemeler")
                        .HasForeignKey("MalzemeGrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaterialManagement.Entity.Concrete.UrunTipiTablosu", "UrunTipiTablosu")
                        .WithMany("Malzemes")
                        .HasForeignKey("UrunTipiTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fiyat");

                    b.Navigation("MalzemeGrup");

                    b.Navigation("UrunTipiTablosu");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.ReceteKalem", b =>
                {
                    b.HasOne("MaterialManagement.Entity.Concrete.Malzeme", "Malzeme")
                        .WithMany("ReceteKalems")
                        .HasForeignKey("MalzemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaterialManagement.Entity.Concrete.ReceteBaslik", "ReceteBaslik")
                        .WithMany("ReceteKalems")
                        .HasForeignKey("ReceteBaslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Malzeme");

                    b.Navigation("ReceteBaslik");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.Stok", b =>
                {
                    b.HasOne("MaterialManagement.Entity.Concrete.Malzeme", "Malzeme")
                        .WithMany("Stoks")
                        .HasForeignKey("MalzemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Malzeme");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.Fiyat", b =>
                {
                    b.Navigation("Malzemes");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.Malzeme", b =>
                {
                    b.Navigation("ReceteKalems");

                    b.Navigation("Stoks");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.MalzemeGrup", b =>
                {
                    b.Navigation("Malzemeler");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.ReceteBaslik", b =>
                {
                    b.Navigation("ReceteKalems");
                });

            modelBuilder.Entity("MaterialManagement.Entity.Concrete.UrunTipiTablosu", b =>
                {
                    b.Navigation("Malzemes");
                });
#pragma warning restore 612, 618
        }
    }
}
